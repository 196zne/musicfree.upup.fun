import{_ as a,o as s,c as e,Q as o}from"./chunks/framework.ab515e0e.js";const y=JSON.parse('{"title":"注意事项","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"plugin/caution.md","filePath":"plugin/caution.md","lastUpdated":1699921759000}'),n={name:"plugin/caution.md"},p=o(`<h1 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h1><h2 id="插件语法" tabindex="-1">插件语法 <a class="header-anchor" href="#插件语法" aria-label="Permalink to &quot;插件语法&quot;">​</a></h2><p>尽量使用 <code>ES8</code> 以下的语法，不然在安卓版上有可能会有语法错误。<code>async/await</code> 用起来基本没什么问题，但是下面这种异步箭头函数在安卓版上可能不支持：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>如果你想用 ES10 的 <code>?.</code> 或者 <code>??</code> 操作符的话，你可以用 <code>babel-cli</code> 转成 <code>es5</code>，基本上就没什么问题了。</p><p><code>PC</code> 版基本上没有语法不支持的情况。</p><h2 id="性能相关" tabindex="-1">性能相关 <a class="header-anchor" href="#性能相关" aria-label="Permalink to &quot;性能相关&quot;">​</a></h2><p>插件是一开始就通过 <code>Function</code> 的形式 hook 进了 <code>js</code> 引擎中，也就是插件和 app 的代码运行在同一个环境下，不会有需要序列化/反序列化之类的可能比较耗时的问题，插件方法的返回值比较大也无所谓（虽然可能后续处理会更耗时）。</p><p>尽量避免频繁请求、请求耗时过长的情况。在 app 中对每次请求的最长时间做了限制。</p><h2 id="安全相关" tabindex="-1">安全相关 <a class="header-anchor" href="#安全相关" aria-label="Permalink to &quot;安全相关&quot;">​</a></h2><p>由于上文所说，插件使用的内置 npm 包也和 app 是共用的。</p><p>不要试图修改 npm 包内的参数，否则 app 可能会出现异常。这也会有潜在的安全问题，使用者也要注意大概看下插件中有没有恶意请求之类的，后续可能会想办法解决掉这个安全问题。</p>`,12),c=[p];function l(t,r,i,d,h,E){return s(),e("div",null,c)}const _=a(n,[["render",l]]);export{y as __pageData,_ as default};
